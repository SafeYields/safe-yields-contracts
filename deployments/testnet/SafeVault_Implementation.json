{
  "address": "0x9b707738949e1642B7CdA4E9Ad071F698DD4A9F2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stableCoin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposited",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stableCoin",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0ba57390fe8306c54b6d3083a73798df78be007d97cfe1c4842b61358637a568",
  "receipt": {
    "to": null,
    "from": "0xbECA6789367Ba654a5BBe533D182e0AA38627960",
    "contractAddress": "0x9b707738949e1642B7CdA4E9Ad071F698DD4A9F2",
    "transactionIndex": 1,
    "gasUsed": "4696701",
    "logsBloom": "0x
    "blockHash": "0xb80258ad56102ee3b79a67eb131726403876e41edd1a18cb2f82f4fa497f1acc",
    "transactionHash": "0x0ba57390fe8306c54b6d3083a73798df78be007d97cfe1c4842b61358637a568",
    "logs": [],
    "blockNumber": 9321030,
    "cumulativeGasUsed": "4696701",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x179522635726710Dd7D2035a81d856de4Aa7836c"
  ],
  "numDeployments": 2,
  "solcInputHash": "dffc69b0a18f69d4c8d1fb9e61f113f3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stableCoin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stableCoin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"crypt0grapher\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Safe Vault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is responsible for $USDC pool: mainly deposit/withdrawal and farms management\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeVault.sol\":\"SafeVault\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":250},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/SafeVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"hardhat-deploy/solc_0.8/proxy/Proxied.sol\\\";\\nimport \\\"./interfaces/ISafeVault.sol\\\";\\n\\n/// @title  Safe Vault\\n/// @author crypt0grapher\\n/// @notice This contract is responsible for $USDC pool: mainly deposit/withdrawal and farms management\\ncontract SafeVault is ISafeVault, Proxied {\\n    IERC20 stableCoin;\\n    uint256 public deposited;\\n    mapping(address => uint256) public balances;\\n\\n    function initialize(address _stableCoin) public proxied {\\n        stableCoin = IERC20(_stableCoin);\\n    }\\n\\n    constructor(address _stableCoin) public {\\n        initialize(_stableCoin);\\n    }\\n\\n    function totalSupply() external view returns (uint256) {\\n        return stableCoin.balanceOf(address(this));\\n    }\\n\\n    function deposit(uint256 _amount) external {\\n        require(_amount > 0, \\\"SafeVault: amount must be greater than 0\\\");\\n        balances[msg.sender] += _amount;\\n        deposited += _amount;\\n        stableCoin.transferFrom(msg.sender, address(this), _amount);\\n    }\\n\\n    function withdraw(address _receiver, uint256 _amount) external {\\n        require(_amount > 0, \\\"SafeVault: amount must be greater than 0\\\");\\n        require(balances[msg.sender] >= _amount, \\\"SafeVault: user balance is less than amount to withdraw\\\");\\n        balances[msg.sender] -= _amount;\\n        deposited -= _amount;\\n        stableCoin.transfer(_receiver, _amount);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x4a6bb21a5e4c2f4537c9e5962a5e23a9bba13f58957f06adf3cdf6153c61fb31\",\"license\":\"MIT\"},\"contracts/interfaces/ISafeVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.17;\\n\\n/// @title  ISafeVault\\n/// @author crypt0grapher\\n/// @notice Safe Yield Vault depositing to the third-party yield farms\\ninterface ISafeVault {\\n\\n    // @notice deposit USDC to the vault from the sender\\n    // @param _amount amount of USDC to deposit\\n    function deposit(uint256 _amount) external;\\n\\n    // @notice Withdraw USDC from the vault to the receiver from the function caller (msg.sender)\\n    // @param _user user to send tokens to, withdrawn from the sender\\n    // @param _amount amount of USDC to withdraw\\n    function withdraw(address _user, uint256 _amount) external;\\n\\n    // @notice totalSupply of the vault\\n    // @return total supply of the vault\\n    function totalSupply() external view returns (uint256);\\n\\n}\\n\",\"keccak256\":\"0x0bb5ff655416e645850b68ac290dba936f9383cdfaf67d5acfa067c8a82c2379\",\"license\":\"MIT\"},\"hardhat-deploy/solc_0.8/proxy/Proxied.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nabstract contract Proxied {\\n    /// @notice to be used by initialisation / postUpgrade function so that only the proxy's admin can execute them\\n    /// It also allows these functions to be called inside a contructor\\n    /// even if the contract is meant to be used without proxy\\n    modifier proxied() {\\n        address proxyAdminAddress = _proxyAdmin();\\n        // With hardhat-deploy proxies\\n        // the proxyAdminAddress is zero only for the implementation contract\\n        // if the implementation contract want to be used as a standalone/immutable contract\\n        // it simply has to execute the `proxied` function\\n        // This ensure the proxyAdminAddress is never zero post deployment\\n        // And allow you to keep the same code for both proxied contract and immutable contract\\n        if (proxyAdminAddress == address(0)) {\\n            // ensure can not be called twice when used outside of proxy : no admin\\n            // solhint-disable-next-line security/no-inline-assembly\\n            assembly {\\n                sstore(\\n                    0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103,\\n                    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\\n                )\\n            }\\n        } else {\\n            require(msg.sender == proxyAdminAddress);\\n        }\\n        _;\\n    }\\n\\n    modifier onlyProxyAdmin() {\\n        require(msg.sender == _proxyAdmin(), \\\"NOT_AUTHORIZED\\\");\\n        _;\\n    }\\n\\n    function _proxyAdmin() internal view returns (address ownerAddress) {\\n        // solhint-disable-next-line security/no-inline-assembly\\n        assembly {\\n            ownerAddress := sload(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaaceeafeeaf0d200ca3942d8bf14c1c4f787a77f79cc87c08bb668e65acdee29\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516106de3803806106de83398101604081905261002f916100bb565b6100388161003e565b506100eb565b60006100566000805160206106be8339815191525490565b90506001600160a01b038116610083576001600160a01b036000805160206106be83398151915255610098565b336001600160a01b0382161461009857600080fd5b50600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000602082840312156100cd57600080fd5b81516001600160a01b03811681146100e457600080fd5b9392505050565b6105c4806100fa6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806318160ddd1461006757806327e235e314610081578063b6b55f25146100a1578063c4d66de8146100b6578063eef49ee3146100c9578063f3fef3a3146100d2575b600080fd5b61006f6100e5565b60405190815260200160405180910390f35b61006f61008f366004610464565b60026020526000908152604090205481565b6100b46100af366004610486565b610157565b005b6100b46100c4366004610464565b61023c565b61006f60015481565b6100b46100e036600461049f565b6102ea565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561012e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015291906104c9565b905090565b600081116101805760405162461bcd60e51b8152600401610177906104e2565b60405180910390fd5b336000908152600260205260408120805483929061019f908490610540565b9250508190555080600160008282546101b89190610540565b90915550506000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610214573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102389190610559565b5050565b60006102667fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b90506001600160a01b0381166102a5576001600160a01b037fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103556102ba565b336001600160a01b038216146102ba57600080fd5b506000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000811161030a5760405162461bcd60e51b8152600401610177906104e2565b3360009081526002602052604090205481111561038f5760405162461bcd60e51b815260206004820152603760248201527f536166655661756c743a20757365722062616c616e6365206973206c6573732060448201527f7468616e20616d6f756e7420746f2077697468647261770000000000000000006064820152608401610177565b33600090815260026020526040812080548392906103ae90849061057b565b9250508190555080600160008282546103c7919061057b565b909155505060005460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af115801561041f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104439190610559565b505050565b80356001600160a01b038116811461045f57600080fd5b919050565b60006020828403121561047657600080fd5b61047f82610448565b9392505050565b60006020828403121561049857600080fd5b5035919050565b600080604083850312156104b257600080fd5b6104bb83610448565b946020939093013593505050565b6000602082840312156104db57600080fd5b5051919050565b60208082526028908201527f536166655661756c743a20616d6f756e74206d75737420626520677265617465604082015267072207468616e20360c41b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b808201808211156105535761055361052a565b92915050565b60006020828403121561056b57600080fd5b8151801515811461047f57600080fd5b818103818111156105535761055361052a56fea2646970667358221220d2b7b1fda38c660a31a7d401e32497c8f9f014ce0fdaa7aa0876e7fbd5754efe64736f6c63430008110033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806318160ddd1461006757806327e235e314610081578063b6b55f25146100a1578063c4d66de8146100b6578063eef49ee3146100c9578063f3fef3a3146100d2575b600080fd5b61006f6100e5565b60405190815260200160405180910390f35b61006f61008f366004610464565b60026020526000908152604090205481565b6100b46100af366004610486565b610157565b005b6100b46100c4366004610464565b61023c565b61006f60015481565b6100b46100e036600461049f565b6102ea565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561012e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015291906104c9565b905090565b600081116101805760405162461bcd60e51b8152600401610177906104e2565b60405180910390fd5b336000908152600260205260408120805483929061019f908490610540565b9250508190555080600160008282546101b89190610540565b90915550506000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610214573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102389190610559565b5050565b60006102667fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b90506001600160a01b0381166102a5576001600160a01b037fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103556102ba565b336001600160a01b038216146102ba57600080fd5b506000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000811161030a5760405162461bcd60e51b8152600401610177906104e2565b3360009081526002602052604090205481111561038f5760405162461bcd60e51b815260206004820152603760248201527f536166655661756c743a20757365722062616c616e6365206973206c6573732060448201527f7468616e20616d6f756e7420746f2077697468647261770000000000000000006064820152608401610177565b33600090815260026020526040812080548392906103ae90849061057b565b9250508190555080600160008282546103c7919061057b565b909155505060005460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af115801561041f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104439190610559565b505050565b80356001600160a01b038116811461045f57600080fd5b919050565b60006020828403121561047657600080fd5b61047f82610448565b9392505050565b60006020828403121561049857600080fd5b5035919050565b600080604083850312156104b257600080fd5b6104bb83610448565b946020939093013593505050565b6000602082840312156104db57600080fd5b5051919050565b60208082526028908201527f536166655661756c743a20616d6f756e74206d75737420626520677265617465604082015267072207468616e20360c41b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b808201808211156105535761055361052a565b92915050565b60006020828403121561056b57600080fd5b8151801515811461047f57600080fd5b818103818111156105535761055361052a56fea2646970667358221220d2b7b1fda38c660a31a7d401e32497c8f9f014ce0fdaa7aa0876e7fbd5754efe64736f6c63430008110033",
  "devdoc": {
    "author": "crypt0grapher",
    "kind": "dev",
    "methods": {},
    "title": "Safe Vault",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is responsible for $USDC pool: mainly deposit/withdrawal and farms management",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7315,
        "contract": "contracts/SafeVault.sol:SafeVault",
        "label": "stableCoin",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)2651"
      },
      {
        "astId": 7317,
        "contract": "contracts/SafeVault.sol:SafeVault",
        "label": "deposited",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 7321,
        "contract": "contracts/SafeVault.sol:SafeVault",
        "label": "balances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)2651": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}